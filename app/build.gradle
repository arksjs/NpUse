plugins {
    id 'com.android.application'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.lyentech.use"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        flavorDimensions "gree", "np"
    }

    //多渠道打包
    applicationVariants.all { variant ->   //配置默认包名写法
        variant.outputs.all { output ->
            def fileName = "v${variant.versionName}.${defaultConfig.versionCode}_np_${variant.productFlavors[0].name}_${variant.productFlavors[1].name}_${buildType.name}.apk"
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = new File(outFile.parent, fileName).getName()
            }
        }
    }

    productFlavors {
        gree {
            dimension "gree"
            buildConfigField "String", "FLAVOR_NAME", "\"gree\""
        }
        npdev {
            dimension "np"
            buildConfigField "String", "FLAVOR_NAME", "\"npdev\""
            manifestPlaceholders = [
                    app_name: "dev_np"
            ]
        }
        npque {
            dimension "np"
            buildConfigField "String", "FLAVOR_NAME", "\"npque\""
            manifestPlaceholders = [
                    app_name: "que_np"
            ]
        }
        nppro {
            dimension "np"
            buildConfigField "String", "FLAVOR_NAME", "\"nppro\""
            manifestPlaceholders = [
                    app_name: "pro_np"
            ]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //本地依赖代码使用
    implementation project(':use')

    //远程依赖使用
//    implementation 'com.github.arksjs:NpUse:v0.0.4'  //改仓库名后也能用

    implementation 'androidx.test:core:1.4.0'
    //单元测试 junit
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    //mockito
    testImplementation 'org.mockito:mockito-core:2.23.4' // 2022/7/5 :4.6.1
    androidTestImplementation  'org.mockito:mockito-android:2.23.4' //添加到androidTest androidTestImplementation
    //powermock
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-core:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.9'
    testImplementation 'org.powermock:powermock-classloading-xstream:2.0.9'
    //robolectric
    testImplementation 'org.robolectric:robolectric:4.8.1'
    //Method put in org.json.JSONObject not mocked
    testImplementation 'org.json:json:20211205'
}